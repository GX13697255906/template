<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dms.cloud.biz309.server.mapper.MarketDataInterfereMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.dms.cloud.biz309.client.model.entity.MarketDataInterfere">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="data_time" property="dataTime" />
        <result column="staff" property="staff" />
        <result column="market_type" property="marketType" />
        <result column="interfere_content" property="interfereContent" />
        <result column="interfere_reason" property="interfereReason" />
        <result column="scope_date" property="scopeDate" />
        <result column="status" property="status" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        create_time,
        update_time,
        id, data_time, staff, market_type, interfere_content, interfere_reason, scope_date, status
    </sql>

    <!--自定义关联查询-->
    <!-- 表名 -->
    <sql id="t_name">biz_market_data_interfere</sql>
    <!-- 别名 -->
    <sql id="t_alias">biz_market_data_interfere as interfere</sql>
    <!--外键表关联定义 -->
    <sql id="join"></sql>

    <!-- 自定义查询单个实体 -->
    <select id="getEntityMap" resultType="com.dms.cloud.common.mybatis.EntityMap">
        SELECT * FROM
        <include refid="t_alias"/>
        <include refid="join"/>
        ${ew.customSqlSegment}
    </select>

    <!-- 自定义关联查询分页 -->
    <select id="pageList" resultType="com.dms.cloud.common.mybatis.EntityMap">
        select ${ew.select} FROM
        <include refid="t_alias"/>
        <include refid="join"/>
        ${ew.customSqlSegment}
    </select>

    <!-- 根据条件 查询市场运营机构干预日志和边界数据调整记录列表  分页-->
    <select id="selectPageAdjustInterfereListByParam" resultType="com.dms.cloud.biz309.client.model.entity.MarketDataInterfere">
        SELECT
            list.id,
            list.data_time AS dataTime,
            list.staff,
            list.market_type AS marketType,
            list.interfere_content AS interfereContent,
            list.interfere_reason AS interfereReason,
            list.scope_date AS scopeDate,
            list.`status`,
            list.create_time AS createTime,
            list.update_time  AS updateTime
        FROM
        (SELECT
            market.id,
            market.data_time,
            market.staff,
            market.market_type,
            market.interfere_content,
            market.interfere_reason,
            market.scope_date,
            market.`status`,
            market.create_time AS 'create_time',
            market.update_time 
        FROM
            biz_market_data_interfere market 
        WHERE  market.status = 0
                <if test="marketType != null and marketType != ''">
               AND
               market.market_type = #{marketType}
            </if>
            <if test="startDate != null">
               AND
               market.scope_date >= #{startDate}
            </if>
            <if test="endDate != null">
               AND
               market.scope_date &lt;= #{endDate}
            </if>
            <if test="status != null">
               AND
               market.status = #{status}
            </if>
            <if test="areaCode != null">
               AND
               market.areaCode = #{areaCode}
            </if>
        <if test="marketType == null">
        UNION ALL
        SELECT
            boundary.id,
            boundary.date_time,
            boundary.staff,
            '' AS 'type',
            boundary.adjust_content,
            boundary.adjust_reason,
            boundary.scope_date,
            boundary.`status`,
            boundary.create_time AS 'create_time',
            boundary.update_time 
        FROM
            biz_boundary_data_adjust boundary 
        WHERE
            boundary.status = 0
            <if test="startDate != null">
               AND
               boundary.scope_date >= #{startDate}
            </if>
            <if test="endDate != null">
               AND
               boundary.scope_date &lt;= #{endDate}
            </if>
            <if test="status != null">
               AND
               boundary.status = #{status}
            </if>
        </if>
        ) list
        ORDER BY list.create_time DESC
    </select>
    
</mapper>
